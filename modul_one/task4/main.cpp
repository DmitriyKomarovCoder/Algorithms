/* 
Решение всех задач данного раздела предполагает использование кучи, реализованной в виде шаблонного класса. 
Решение должно поддерживать передачу функции сравнения снаружи.
Куча должна быть динамической.
4.3 Планировщик процессов
В операционной системе Technux есть планировщик процессов. 
Каждый процесс характеризуется:
приоритетом P
временем, которое он уже отработал t
временем, которое необходимо для завершения работы процесса T 
Планировщик процессов выбирает процесс с минимальным значением P * (t + 1), выполняет его время P и кладет обратно в очередь процессов.
Если выполняется условие t >= T, то процесс считается завершенным и удаляется из очереди.
Требуется посчитать кол-во переключений процессора.

*/
template <class T, class Compare>
class Heap {
 public:
    Heap(Compare cmp);
    Heap(T* arr, int size, Compare cmp);

    void Add(cont T&);
    T ExtractMax();
    const T& Peek() const;
    size_t Size() const;
 private:
    Compare cmp;
    T* buffer;
    size_t bufferSize;
    size_t size;
};